#!/usr/bin/env node
/*
 * Copyright (c) 2017 TopCoder, Inc. All rights reserved.
 */

/**
 * This module is the bootstrap of the app.
 *
 * @author TCSCODER
 * @version 1.0
 */

'use strict';
const http = require('http');
const _ = require('lodash');
const debug = require('debug')('receiver:server');
const config = require('config');
const app = require('../app');

const port = config.PORT;

/**
 * Get port from environment and store in Express.
 */

app.set('port', port);

/**
 * Create HTTP server.
 */

const server = http.createServer(app);

/**
 * Listen on provided port, on all network interfaces.
 */

server.listen(port);

const onError = (error) => {
  if (error.syscall !== 'listen') {
    throw error;
  }

  const bind = _.isString(port)
    ? `Pipe ${port}`
    : `Port ${port}`;

  // handle specific listen errors with friendly messages
  switch (error.code) {
  case 'EACCES':
    console.error(`${bind} requires elevated privileges`);
    process.exit(1); // eslint-disable-line no-process-exit
    break;
  case 'EADDRINUSE':
    console.error(`${bind} is already in use`);
    process.exit(1); // eslint-disable-line no-process-exit
    break;
  default:
    throw error;
  }
};

/**
 * Event listener for HTTP server "listening" event.
 */
const onListening = () => {
  const addr = server.address();
  const bind = _.isString(addr)
    ? `pipe ${addr}`
    : `port ${addr.port}`;
  console.error(`Listening on ${bind}`);
};

server.on('error', onError);
server.on('listening', onListening);
